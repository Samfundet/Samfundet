FROM debian:bullseye

# Change RUN shell from /bin/sh to /bin/bash.
SHELL ["/bin/bash", "-c"]

### Update Ubuntu Software repository. ###
RUN ls \
    && apt update -y \
    && apt upgrade -y \
    && apt install -y --no-install-recommends build-essential openssl ca-certificates git procps curl file git nano sudo ncdu gcc postgresql libpq-dev make git curl libssl-dev libreadline-dev zlib1g-dev autoconf bison libyaml-dev libncurses5-dev libffi-dev libgdbm-dev imagemagick nodejs bzip2 graphviz shared-mime-info \
    && sudo update-ca-certificates
# && rm -rf /var/lib/apt/lists/*

# RUN ls \
#     # && apt install -y   \
#     && ls


WORKDIR /Samfundet
COPY . /Samfundet

# Set manually (from '.bundler-version') because Dockerfile is unable to cat from file.
ARG BUNDLER_VERSION=1.17.3

### rbenv ###
# Install.
RUN curl -fsSL https://github.com/rbenv/rbenv-installer/raw/HEAD/bin/rbenv-installer | bash
# Add executable to path.
ENV PATH="~/.rbenv/bin:$PATH"

### ruby ###
# init rbenv because RUN spawns new shell.
RUN ls \
    && eval "$(rbenv init - bash)" \
    && rbenv install \
    # && gem install mimemagic -v '0.3.10' --source \
    # && gem install eventmachine -v '1.2.7' --source \
    && gem install bundler:${BUNDLER_VERSION} \
    && bundle install

RUN ls \
    && cp config/database.example.yml config/database.yml \
    && cp config/local_env.example.yml config/local_env.yml \
    && cp config/billig.example.yml config/billig.yml \
    && cp config/secrets.example.yml config/secrets.yml \
    && cp .env.example .env

# init rbenv because RUN spawns new shell.
# RUN eval "$(rbenv init - bash)" && bundle exec rake db:setup

# https://github.com/locomotivecms/wagon/issues/340
RUN cp /etc/hosts /etc/hosts.new && \
    sed -i 's/::1\tlocalhost ip6-localhost ip6-loopback/::1 ip6-localhost ip6-loopback/' /etc/hosts.new && \
    cp -f /etc/hosts.new /etc/hosts

EXPOSE 3000

# init rbenv because RUN spawns new shell.
CMD eval "$(rbenv init - bash)" && bundle exec rails server

# ### Commands: ###
# # Only build.
# # docker build -t samfundet/samfundet .

# # Only start container.
# # docker run --name samfundet-samfundet -p 8000:8000 -it samfundet/samfundet

# # Build and run.
# # docker build -t samfundet/samfundet . && docker run --name samfundet-samfundet -p 8000:8000 -it samfundet/samfundet

# # Spawn interactive shell in already running container.
# # docker exec -it samfundet-samfundet bash


# # If user is needed.
# # RUN adduser emilte && adduser emilte sudo
# # RUN echo "emilte:emilte"|chpasswd
# # USER emilte
