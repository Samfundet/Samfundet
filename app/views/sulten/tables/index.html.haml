= link_to sulten_admin_path do
  .samf-button
    = t("common.back")

%h2
  .text-Align
    = t("helpers.models.sulten.all", :n => t("helpers.models.sulten.table.other"))

%p
  = link_to new_sulten_table_path do
    .samf-button.center.green
      = t("helpers.models.sulten.new_thing", :n => t("helpers.models.sulten.table.one"))

%table
  %thead
    %th
      = t("sulten.reservation.table")
    %th
      = t("sulten.table.capacity")
    %th
      = t("sulten.table.comment")
    %th
      = t("sulten.table.available")
    %th
      = t("sulten.table.next")
    - Sulten::ReservationType.all.each do |t|
      %th
        = t
    %th
    %th
  - @tables.each do |t|
    %tr
      %td
        = link_to t.number, t
      %td
        = t.capacity
      %td
        = t.comment
      %td
        - if t.available
          = t("formtastic.yes")
        - else
          = t("formtastic.no")
        %td
          - $next = t.reservations.where("reservation_to > ?", DateTime.now).order("reservation_to ASC").first
          - if $next
            = link_to [$next.reservation_from, DateTime.now].max.strftime("%d.%m %H:%M") + " - " + $next.reservation_to.strftime("%H:%M"), $next
      - Sulten::ReservationType.all.each do |r|
        %td
          - if t.reservation_types.include? r
            X
      %td
        = link_to edit_sulten_table_path(t) do
          .samf-button.blue
            = t("crud.edit")
      %td
        = link_to t, data: { confirm: t("crud.confirm") }, method: :delete do
          .samf-button
            = t("crud.destroy")
