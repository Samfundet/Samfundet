- set_open_graph_params({ title: @event.title, description: @event.short_description, image: asset_url(@event.image_or_default.url(:large)) })
- set_twitter_params({ card: "summary_large_image", title: @event.title, description: @event.short_description, "image:src" => asset_url(@event.image_or_default.url(:large)) })

.billig-buy

  .samfundet-logo 

  %h1
    = t('events.buy_title', event_title: @event.title)

  = form_tag Rails.application.config.billig_path, method: "post", class: 'custom-form' do
    -# Data fields to extract in JavaScript
    - ticket_table_data = "data-default-ticket-limit"
    - ticket_group_data = ["data-has-ticket-limit", "data-ticket-limit"]

    %table.ticket-table{ticket_table_data => "#{BilligTicketGroup::DEFAULT_TICKET_LIMIT}"}
      -# Translate currency and ticket unit in billig.css.scss
      - currency_unit_class = "td-currency-unit-#{I18n.locale}"
      - ticket_unit_class = "td-ticket-unit-#{I18n.locale}"

      -# Iterate through all the ticket groups
      - @ticket_groups.each_with_index do |ticket_group, i|
        -# Only use ticket group name if there are multiple ticket groups
        - ticket_group_name = @ticket_groups.length > 1 ? ticket_group.ticket_group_name : t('events.price_group')

        -# The price groups in the current ticket group
        - price_groups = ticket_group.netsale_billig_price_groups

        -# The ticket limit to use if the ticket group has no ticket limit
        - default_ticket_group_ticket_limit = BilligTicketGroup::DEFAULT_TICKET_LIMIT * price_groups.length

        -# Only use ticket limit if there are tickets left
        - ticket_group_ticket_limit = 0
        - if ticket_group.tickets_left?
          - ticket_group_ticket_limit = ticket_group.ticket_limit? ? ticket_group.ticket_limit : default_ticket_group_ticket_limit

        -# HTML attributes for use in the javascript
        - ticket_group_id = "tg#{i}"
        - ticket_group_class = "ticket-limit-#{ticket_group_ticket_limit}"

        -# Set ticket group row ( ticket group | ticket limit)
        %tr.ticket-group-row{id: ticket_group_id, ticket_group_data[0] => "#{ticket_group.ticket_limit?}", ticket_group_data[1] => "#{ticket_group_ticket_limit}"}
          
          %th
            = ticket_group_name

          -# Only iterate populate price group rows if ticket group has tickets left
          - if ticket_group.tickets_left?
            %th
              = t("events.price")
            %th.ticket-limit-hd
              = t("events.amount")
            %th
              = t("events.sum")
            -# Iterate thorugh all the price groups
            - price_groups.each_with_index do |price_group, j|
              - price_group_options = ticket_group.price_group_ticket_limit

              -# Set price group row (price group | price | dropdown | temp. sum)
              %tr.price-group-row
                %td
                  = price_group.price_group_name
                %td.price{data: {price: price_group.price}, class: currency_unit_class}
                  = "#{price_group.price}"
                %td
                  = select_tag "price_#{price_group.price_group.to_s}_count",
                    options_for_select((0 .. price_group_options),
                      @payment_error_price_groups[price_group.price_group]), class: ticket_group_id, tabindex: 1
                %td.sum{class: currency_unit_class}
                  = "0"
          - else
            %th.ticket-limit-hd{colspan: 3}
              = t('events.sold_out')

      -# Order summary for all ticket groups
      %tr.ticket-summary-row
        %td
          = t('events.total')
        %td
        %td.totalAmount.ticket-data{class: ticket_unit_class}
          = "0/#{@event.total_ticket_limit}"
        %td.totalSum.ticket-data{class: currency_unit_class}
          = "0"

    .member-notice= t("events.member_notice")

    %hr

    .ticket-type-container
      %h2
        = "Billettype"
      
      .row
        - isMember = current_user.is_a?(Member)
        %p.payment-choice
          = radio_button_tag "ticket_type", "card", @payment_error.try(:owner_cardno).present?, checked: isMember
          = label_tag "ticket_type_card", t('events.ticketless'), class: 'radio-label'
          = text_field_tag "membercard", @payment_error.try(:owner_cardno) || (current_user.try(:membership_card).try(:card) if isMember), tabindex: 2, disabled: !isMember, placeholder: t("events.member_hint")

        - if @non_member_ticket_available
          %p.payment-choice
            = radio_button_tag "ticket_type", "paper", @payment_error.try(:owner_email).present?, checked: !isMember
            = label_tag "ticket_type_paper", t('events.paperticket'), class: 'radio-label'
            = email_field_tag :email, @payment_error.try(:owner_email), tabindex: 2, disabled: isMember, placeholder: t("events.email_hint")

      #ticketless-info.payment-info{style: 'display: none'}
        = t('events.about_ticketless_html')
      #paperticket-info.payment-info
        = t('events.about_paperticket_html')

    %div{style: "margin-top: 2em;"}
      = link_to t('events.stripe'), 'https://stripe.com/privacy', target: '_blank'
    %div
      = t('events.payment_prices')
    %div
      = link_to t('events.terms'), Page.tickets, target: '_blank'

    .payment-wrapper

      %div{style: "flex: 1;"}

      #validation-hint.hint
        #missing-ticket-count
          = t("events.ticket_count_zero")
        #missing-user-info
          = t("events.missing_user_info")
      .payment-submit.disabled
        = submit_tag t('events.commit_buy'), name: "commit", disabled: true, tabindex: 8
