= javascript_include_tag 'job_applications/admissions_admin_job_applications', defer: true
= javascript_include_tag 'applicants/job_application_interviews', defer: true
- set_title "#{@job_application.applicant.full_name} - #{t('jobs.view_application')}"

.flex-column
  = link_to admissions_admin_admission_group_job_path(@job_application.job.admission, @job_application.job.group, @job_application.job) do
    .samf-button.plain.mb-3
      = t("common.back")

%h1
  = @job_application.applicant.full_name

%hr

%table
  %tr
    %td= t('interviews.applicant_phone_number')
    %td= @job_application.applicant.phone
  %tr
    %td= t('interviews.applicant_email_address')
    %td= @job_application.applicant.email
  %tr
    %td= t('interviews.applicant_campus')
    %td=@job_application.applicant.campus
  %tr
    %td= t('job_applications.offer_other_positions')
    - if @job_application.applicant.interested_other_positions == nil
      %td= t(false.to_s)
    - else
      %td= t(@job_application.applicant.interested_other_positions.to_s)

- if current_user.roles.include? Role.super_user
  .flex-row.mt-3
    = link_to admissions_admin_admission_edit_applicant_path(:applicant_id => @job_application.applicant) do
      .samf-button
        = "Rediger Søker"

%hr

%h1= t('job_applications.application') + " - " + @job_application.job.title
!= simple_format(html_escape(@job_application.motivation))

- if @job_application.withdrawn
  %h2.m-3{style:"color: red; font-weight: bold;"}
    ="Denne søknaden er blitt trukket!"

- if can?(:withdraw, JobApplication)
  - if !@job_application.withdrawn
    = link_to job_application_path(@job_application), method: :delete, data: { confirm: "Er du sikker?" } do
      .samf-button.red.center
        = 'Trekk søknad'
  -# TODO This does not work (not in production either)
  -# - else
  -#   = link_to job_application_path(@job_application), method: :put, data: { confirm: "Er du sikker?" } do
  -#     .samf-button.plain.center
  -#       = 'Aktiver søknad'

  -#.log
  -#  %h3= t('job_applications.log_entries.log_entries')
  -#  %p= t('job_applications.log_entries.description')
  -#= semantic_form_for [:admissions_admin, @job_application.job.admission, @job_application.job.group, @job_application.applicant, LogEntry.new] do |form|
  -#  %input{ type: :hidden, name: :job_application_id, value: @job_application.id }
  -#  = form.inputs do
  -#    != form.input :log, as: :select, collection: @possible_log_entries
  -#  = form.actions do
  -#    != form.action(:submit)
  -#
  -#- unless @log_entries.empty?
  -#  %table
  -#    %thead
  -#      %tr
  -#        %th= t('job_applications.log_entries.date_and_time')
  -#        %th= t('job_applications.log_entries.entry')
  -#        %th= t('job_applications.log_entries.logged_by')
  -#        %th &nbsp;
  -#    - @log_entries.each_with_index do |log_entry, index|
  -#      %tr
  -#        %td
  -#          = log_entry.created_at
  -#        %td
  -#          = log_entry.log
  -#        %td
  -#          = log_entry.member.full_name
  -#        %td
  -#          = link_to t('crud.destroy').humanize, [:admissions_admin, @job_application.job.admission,
  -#          @job_application.job.group, @job_application.applicant, log_entry], method: "delete", data: { confirm: t('crud.confirm') }

%hr

%h1= "Søknader i " + @job_application.job.group.name
%table.applications.custom-table.sorted
  %thead
    %th.number
      = t('interviews.applicant_number')
    %th.job_name
      = "Verv"
    %th.interview-time
      = t('interviews.interview_time')
    %th.location
      = t('interviews.location')
    %th.application-status
      = t('interviews.interview_priority')
    %th.status
      = "Status"
    %th.applicant_ranking
      = t('interviews.applicant_ranking')
    %th.interviews_set
      = t('interviews.interviews_set')
    %th.comment
      = t('interviews.comment')

    - group = @job_application.job.group
    - admission = @job_application.job.admission
    %tbody{class: "job_application_table"}
      - @job_applications_in_group.each_with_index do |job_application, index|
        - job = job_application.job
        - tr_class = "#{job_application.assignment_status}"
        %tr{id: "application-#{job_application.id}", class: tr_class}
          %td
            = index+1
          %td
            = link_to admissions_admin_admission_group_job_path(admission, group, job) do
              = job.title
          %td{style: "width:120px;"}
            = semantic_form_for([:admissions_admin, admission, group, job, job_application, interview = job_application.find_or_create_interview], namespace: "interview_#{interview.id}", html: {class: "test custom-form"}) do |form|
              = form.inputs do
                != form.input :time, as: :string, label: false, name: "time", input_html: { id: "interview_#{job_application.id}_time", class: "datetimepicker", value: interview.time ? interview.time : '', placeholder: "DD.MM.ÅÅÅÅ HH:MM" }
              %span{ class: "status" }
              = form.actions do
                != form.action :submit, button_html: { class: "interview_save", value: t('interviews.save_interview_time') }
          %td
            = semantic_form_for([:admissions_admin, admission, group, job, job_application, interview = job_application.find_or_create_interview], namespace: "interview_#{interview.id}", html: {class: "test custom-form"}) do |form|
              = form.inputs do
                != form.input :location, label: false, name: "location", input_html: { id: "interview_#{job_application.id}_location", placeholder: t('interviews.location') }
              %span{ class: "status" }
              = form.actions do
                != form.action :submit, button_html: { class: "interview_save", value: t('interviews.save_interview_location') }
          %td
            = semantic_form_for([:admissions_admin, admission, group, job, job_application, interview = job_application.find_or_create_interview], namespace: "interview_#{interview.id}", html: {class: "test custom-form"}) do |form|
              = form.inputs do
                != form.input :priority, name: "priority", as: :select, label: false, required: true, value: interview.priority, collection: interview.priorities.invert.sort, input_html: { id: "interview_#{job_application.id}_priority", disabled: interview.past_set_priority_deadline? }
              %span{ class: "status" }
              = form.actions do
                != form.action :submit, button_html: { class: "interview_save", value: t('interviews.save_interview_status') }
          %td
            = semantic_form_for([:admissions_admin, admission, group, job, job_application, interview = job_application.find_or_create_interview], namespace: "interview_#{interview.id}", html: {class: "test custom-form"}) do |form|
              = form.inputs do
                != form.input :applicant_status, name: "applicant_status", as: :select, label: false, required: true, value: interview.applicant_status, collection: interview.applicant_statuses.invert, input_html: { id: "interview_#{job_application.id}_applicant_status"}
              = form.actions do
                != form.action :submit, button_html: { class: "interview_save", value: t('interviews.save_interview_status') }
              %span{ class: "status" }
          %td
            = job_application.applicant.priority_of_job_application(admission, job_application).to_s + " / " + job_application.applicant.jobs_applied_to(admission).length.to_s
          %td
            = job_application.applicant.get_set_interviews(admission).length.to_s + " / " + job_application.applicant.jobs_applied_to(admission).length.to_s
          %td
            = semantic_form_for([:admissions_admin, admission, group, job, job_application, interview = job_application.find_or_create_interview], namespace: "interview_#{interview.id}", html: {class: "test custom-form"}) do |form|
              = form.inputs do
                != form.input :comment, label: false, input_html: { rows: 2, cols: 7}
              %span{ class: "status" }
              = form.actions do
                != form.action :submit, button_html: { class: "interview_save", value: 'save' }


%hr

%h1= t('admissions.all_applications')
%p
  %input#hide_withdrawn{type:"checkbox", checked: true}
    = t('job_applications.hide_withdrawn_applications')
%table
  %thead
    %tr
      %th= t('job_applications.job')
      %th= t('job_applications.group')
      %th= t('job_applications.status')
      %th= t('job_applications.interview_time')
  %tbody
    - @job_application.applicant.job_applications.select {|application| application.job.admission == @job_application.job.admission}.each_with_index do |job_application, index|

      %tr{ class: [job_application == @job_application ? 'current' : 'other', job_application.assignment_status], class: [job_application.withdrawn ? 'withdrawn display-none' : ''] }
        %td
          - if job_application != @job_application && can?(:show, :admissions_admin_job_applications)
            = link_to admissions_admin_admission_group_job_job_application_path(job_application.job.admission, job_application.job.group, job_application.job, job_application) do
              = job_application.job.title
          - else
            = job_application.job.title
        %td
          = group_link(job_application.job.group)
        %td
          = job_application.find_or_create_interview.priority_string
        %td
          - if job_application.find_or_create_interview.time.nil?
            = t('job_applications.not_set')
          - else
            = job_application.find_or_create_interview.time
